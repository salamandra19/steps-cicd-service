version: 2.1

# Snippets for jobs:
setup_env: &setup_env
    run:
        name: Setup environment
        command: |
            env | sort > /tmp/env.old

            export SERVICE=example-cicd-service
            export IMAGE_TAG=salamandra19/$SERVICE:$CIRCLE_SHA1
            export GOLANGCI_LINT_VER=1.15.0

            env | sort > /tmp/env.new
            ! diff -u /tmp/env.old /tmp/env.new | sed -n '/^+[^+]/s/^./export /p' >> $BASH_ENV
            env | grep _VER | sort > /tmp/tools.ver

jobs:
    test:
        docker:
            - image: circleci/golang:1
        steps:
            - checkout
            - *setup_env
            - run:
                name: Initialize
                command: |
                    rmdir /go/*/ # fix owner/permission
            - restore_cache:
                keys:
                    - v1-{{ checksum "/tmp/tools.ver" }}-{{ checksum "go.mod" }}-{{ .Branch }}
                    - v1-{{ checksum "/tmp/tools.ver" }}-{{ checksum "go.mod" }}-
                    - v1-{{ checksum "/tmp/tools.ver" }}-
                    - v1-
            - run:
                name: Install tools
                command: |
                    cd /
                    golangci-lint --version | tee /dev/stderr | grep -wq $GOLANGCI_LINT_VER ||
                        curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b /go/bin v$GOLANGCI_LINT_VER
                    go get -v github.com/mattn/goveralls
            - run: ./test -mod=readonly -v -race
            - run: goveralls -service=circle-ci
            - save_cache:
                when: always
                key: v1-{{ checksum "/tmp/tools.ver" }}-{{ checksum "go.mod" }}-{{ .Branch }}
                paths:
                    - /go/bin/
                    - /go/pkg/
                    - /go/src/
                    - ~/.cache/go-build/

    build-and-release:
        docker:
            - image: "cpdpro/baseimage:build-golang"
        environment:
            GOFLAGS: "-mod=readonly"
        steps:
            - checkout
            - setup_remote_docker
            - *setup_env
            - restore_cache:
                keys:
                    - v1-{{ checksum "/tmp/tools.ver" }}-{{ checksum "go.mod" }}-{{ .Branch }}
                    - v1-{{ checksum "/tmp/tools.ver" }}-{{ checksum "go.mod" }}-
                    - v1-{{ checksum "/tmp/tools.ver" }}-
                    - v1-
            - run: ./build -v
            - run: docker build -t $IMAGE_TAG .
            - deploy:
                name: Upload to Docker Hub
                command: |
                    docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"
                    docker push $IMAGE_TAG
                    docker tag $IMAGE_TAG ${IMAGE_TAG%:*}:latest
                    docker push ${IMAGE_TAG%:*}:latest

    deploy:
        docker:
            - image: "cpdpro/baseimage:build-alpine"
        steps:
            - checkout
            - *setup_env
            - deploy:
                name: Deploy to staging
                command: |
                    env | grep ^EXAMPLE_ | install -m 0600 /dev/stdin .env
                    ./deploy_swarm root@salamandra.powerman.name

workflows:
    default:
        jobs:
            - test
            - build-and-release:
                requires:
                    - test
                filters:
                    branches:
                        only: master
            - deploy:
                requires:
                    - build-and-release
                filters:
                    branches:
                        only: master
